{"version":3,"sources":["script.js"],"names":["CountdownTimer","selector","targetDate","document","querySelector","Date","days","Math","floor","remainingTime","hours","mins","secs","refs","minutes","seconds","textContent","pad","intervalId","setInterval","currentTime","timeCounter","onTimeIntoMarckup","stopCount","clearInterval","value","String","padStart","timer","startCount"],"mappings":";AAkDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAjDMA,IAAAA,EAAAA,WACQC,SAAAA,EAAAA,EAAUC,GAAY,EAAA,KAAA,GAC3BD,KAAAA,SAAWE,SAASC,cAAcH,GAClCC,KAAAA,WAAa,IAAIG,KAAKH,GA8C/B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,cA3CkB,MAAA,WACTI,KAAAA,KAAOC,KAAKC,MAAM,KAAKC,cAAiB,OACxCC,KAAAA,MAAQH,KAAKC,MAAO,KAAKC,cAAiB,MAAyB,MACnEE,KAAAA,KAAOJ,KAAKC,MAAO,KAAKC,cAAiB,KAAoB,KAC7DG,KAAAA,KAAOL,KAAKC,MAAO,KAAKC,cAAiB,IAAc,OAuChE,CAAA,IAAA,oBApCsB,MAAA,WACZI,IAAAA,EAAO,CACXP,KAAMH,SAASC,cAAc,sBAC7BM,MAAOP,SAASC,cAAc,uBAC9BU,QAASX,SAASC,cAAc,sBAChCW,QAASZ,SAASC,cAAc,uBAGlCS,EAAKP,KAAKU,YAAc,KAAKC,IAAI,KAAKX,MACtCO,EAAKH,MAAMM,YAAc,KAAKC,IAAI,KAAKP,OACvCG,EAAKC,QAAQE,YAAc,KAAKC,IAAI,KAAKN,MACzCE,EAAKE,QAAQC,YAAc,KAAKC,IAAI,KAAKL,QAyB7C,CAAA,IAAA,aAtBe,MAAA,WAAA,IAAA,EAAA,KACNM,KAAAA,WAAaC,YAAY,WAC5B,EAAKC,YAAc,IAAIf,KACvB,EAAKI,cAAgB,EAAKP,WAAa,EAAKkB,YAC5C,EAAKC,cAAe,EAAKC,oBACrB,EAAKb,cAAgB,GACvB,EAAKc,aAEN,OAcP,CAAA,IAAA,YAZc,MAAA,WACVC,cAAc,KAAKN,YACdT,KAAAA,cAAgB,EAChBY,KAAAA,YAAY,KAAKZ,eACjBa,KAAAA,kBAAkB,KAAKb,iBAQhC,CAAA,IAAA,MALMgB,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAIrC,EAjDM3B,GAgDA4B,EAAQ,IAAI5B,EAAe,WAAY,4BAC7C4B,EAAMC","file":"script.a0c6b210.js","sourceRoot":"..","sourcesContent":["\r\nclass CountdownTimer {\r\n  constructor(selector, targetDate) {\r\n    this.selector = document.querySelector(selector);\r\n    this.targetDate = new Date(targetDate);\r\n    }\r\n\r\n    timeCounter() {\r\n    this.days = Math.floor(this.remainingTime / (1000 * 60 * 60 * 24));\r\n    this.hours = Math.floor((this.remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    this.mins = Math.floor((this.remainingTime % (1000 * 60 * 60)) / (1000 * 60));\r\n    this.secs = Math.floor((this.remainingTime % (1000 * 60)) / 1000);\r\n    }\r\n    \r\n  onTimeIntoMarckup() {\r\n    const refs = {\r\n      days: document.querySelector(\" [data-value=days]\"),\r\n      hours: document.querySelector(\" [data-value=hours]\"),\r\n      minutes: document.querySelector(\" [data-value=mins]\"),\r\n      seconds: document.querySelector(\" [data-value=secs]\")\r\n      };\r\n      \r\n    refs.days.textContent = this.pad(this.days);\r\n    refs.hours.textContent = this.pad(this.hours);\r\n    refs.minutes.textContent = this.pad(this.mins);\r\n    refs.seconds.textContent = this.pad(this.secs);\r\n    }\r\n\r\n  startCount() {\r\n    this.intervalId = setInterval(() => {\r\n      this.currentTime = new Date();\r\n      this.remainingTime = this.targetDate - this.currentTime;\r\n      this.timeCounter(), this.onTimeIntoMarckup();\r\n      if (this.remainingTime < 0) {\r\n        this.stopCount();\r\n      }\r\n    }, 1000);\r\n  } \r\n  stopCount() {\r\n    clearInterval(this.intervalId);\r\n    this.remainingTime = 0;\r\n    this.timeCounter(this.remainingTime);\r\n    this.onTimeIntoMarckup(this.remainingTime);\r\n  }\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, \"0\");\r\n  }\r\n}\r\nconst timer = new CountdownTimer(\"#timer-1\", \"December 27, 2020, 23:00\");\r\ntimer.startCount();\r\n\r\n"]}